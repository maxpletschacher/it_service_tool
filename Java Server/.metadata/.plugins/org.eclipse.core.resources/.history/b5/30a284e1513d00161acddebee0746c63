package de.ittool.servlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.annotation.Resource;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;

import de.ittool.beans.Meta;
import de.ittool.beans.Produkt;

/**
 * Servlet implementation class Home
 */
@WebServlet("/home")
public class HomeServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	@Resource(lookup="jdbc/MyTestSQLPool")
	private DataSource ds;
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// Servlet zur Entgegennahme von Formularinhalten und Generierung eines Beans zur Weitergabe
		// der Formulardaten an eine JSP
		request.setCharacterEncoding("UTF-8");	
		
		//definitionen
		Meta meta = new Meta();
		meta.setTitle("IT.Software.Hardware | Home");
		meta.setCss("");
		meta.setJs("");
		
		//Abfrage alle Produkte
		// DB-Zugriff
		List<Produkt> produkte = listProdukte();
		List<Produkt> bestseller = listBestseller();
		
		
		// Scope "Request"
		request.setAttribute("meta", meta);
		request.setAttribute("produkte", produkte);
		request.setAttribute("bestseller", bestseller);
		
		// Weiterleiten an JSP
		final RequestDispatcher dispatcher = request.getRequestDispatcher("home.jsp");
		dispatcher.forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
	private List<Produkt> listProdukte() throws ServletException {
		List<Produkt> produkte = new ArrayList<Produkt>();

		// DB-Zugriff
		try (Connection con = ds.getConnection();
			 PreparedStatement pstmt = 
					 con.prepareStatement("SELECT produkte.id,produkte.produktname,produkte.produktbeschreibung,produkte.produktfeatures,produkte.bild1,produkte.bild2,produkte.bild3,kategorie.bezeichnung,produkte.lagerbestand,produkte.preis, produkte.img1 "
					 		            + "FROM produkte "
					 		            + "INNER JOIN kategorie ON kategorie.id = produkte.kategorie")) {
			
			try (ResultSet rs = pstmt.executeQuery()) {
				while (rs.next()) {
				/*	Produkt produkt = new Produkt();
					produkt.setId(rs.getInt(1));
					produkt.setName(rs.getString(2));
					produkt.setBeschreibung(rs.getString(3));
					produkt.setFeature(rs.getString(4));
					produkt.setBild1(rs.getString(5));
					produkt.setBild2(rs.getString(6));
					produkt.setBild3(rs.getString(7));
					produkt.setKategorie(rs.getString(8));
					produkt.setLagerbestand(rs.getInt(9));
					produkt.setPreis(rs.getDouble(10));
					produkte.add(produkt); */
					
					Produkt produkt = new Produkt();
					produkt.setId(rs.getInt(1));
					produkt.setName(rs.getString(2));
					produkt.setBeschreibung(rs.getString(3));
					produkt.setFeature(rs.getString(4));
					produkt.setImg1(rs.getBlob(11));
					produkt.setBild2(rs.getString(6));
					produkt.setBild3(rs.getString(7));
					produkt.setKategorie(rs.getString(8));
					produkt.setLagerbestand(rs.getInt(9));
					produkt.setPreis(rs.getDouble(10));
					produkte.add(produkt);
				}
			}
		} catch (Exception ex) {
			throw new ServletException(ex.getMessage());
		}
		
		return produkte;
	}
	private List<Produkt> listBestseller() throws ServletException {
		List<Produkt> produkte = new ArrayList<Produkt>();

		// DB-Zugriff
		try (Connection con = ds.getConnection();
			 PreparedStatement pstmt = 
					 con.prepareStatement("SELECT produkte.id,produkte.produktname,produkte.produktbeschreibung,produkte.produktfeatures,produkte.bild1,produkte.bild2,produkte.bild3,kategorie.bezeichnung,produkte.lagerbestand,produkte.preis "
							 + "FROM (produkte INNER JOIN kategorie ON kategorie.id = produkte.kategorie) "
							 + "right join `bestellpositionen` on bestellpositionen.`produktid` = produkte.id "
							 + "group by `produktid` order by sum(anzahl) DESC limit 5;")) {
			
			try (ResultSet rs = pstmt.executeQuery()) {
				while (rs.next()) {
					Produkt produkt = new Produkt();
					produkt.setId(rs.getInt(1));
					produkt.setName(rs.getString(2));
					produkt.setBeschreibung(rs.getString(3));
					produkt.setFeature(rs.getString(4));
					produkt.setBild1(rs.getString(5));
					produkt.setBild2(rs.getString(6));
					produkt.setBild3(rs.getString(7));
					produkt.setKategorie(rs.getString(8));
					produkt.setLagerbestand(rs.getInt(9));
					produkt.setPreis(rs.getDouble(10));
					produkte.add(produkt);
				}
			}
		} catch (Exception ex) {
			throw new ServletException(ex.getMessage());
		}
		
		return produkte;
	}

}
